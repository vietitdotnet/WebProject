@using Microsoft.AspNetCore.Identity
@using WebProject.Entites

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="manager" asp-controller="category" asp-action="index">
            <i class="bi bi-person-fill-gear"></i> Manager
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="identity" asp-page="/role/index">
            <i class="bi bi-person-fill-gear"></i> User
        </a>
    </li>
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
